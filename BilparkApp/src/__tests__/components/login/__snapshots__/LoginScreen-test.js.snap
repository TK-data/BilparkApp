// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing LoginScreen Renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Image
            resizeMode="contain"
            source={
              Object {
                "process": [Function],
              }
            }
            style={
              Object {
                "height": 150,
                "width": 150,
              }
            }
          />
        </View>,
        <View
          style={
            Object {
              "flex": 2,
              "justifyContent": "center",
            }
          }
        >
          <Styled(Content)
            contentContainerStyle={
              Object {
                "alignItems": "center",
                "backgroundColor": "#002776",
                "flex": 3,
                "justifyContent": "flex-start",
              }
            }
            virtual={undefined}
          >
            <Connect(LoginForm) />
          </Styled(Content)>
        </View>,
      ],
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#002776",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Image
            resizeMode="contain"
            source={
              Object {
                "process": [Function],
              }
            }
            style={
              Object {
                "height": 150,
                "width": 150,
              }
            }
          />,
          "style": Object {
            "flex": 1,
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "resizeMode": "contain",
            "source": Object {
              "process": [Function],
            },
            "style": Object {
              "height": 150,
              "width": 150,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Content)
            contentContainerStyle={
              Object {
                "alignItems": "center",
                "backgroundColor": "#002776",
                "flex": 3,
                "justifyContent": "flex-start",
              }
            }
            virtual={undefined}
          >
            <Connect(LoginForm) />
          </Styled(Content)>,
          "style": Object {
            "flex": 2,
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(LoginForm) />,
            "contentContainerStyle": Object {
              "alignItems": "center",
              "backgroundColor": "#002776",
              "flex": 3,
              "justifyContent": "flex-start",
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Image
              resizeMode="contain"
              source={
                Object {
                  "process": [Function],
                }
              }
              style={
                Object {
                  "height": 150,
                  "width": 150,
                }
              }
            />
          </View>,
          <View
            style={
              Object {
                "flex": 2,
                "justifyContent": "center",
              }
            }
          >
            <Styled(Content)
              contentContainerStyle={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#002776",
                  "flex": 3,
                  "justifyContent": "flex-start",
                }
              }
              virtual={undefined}
            >
              <Connect(LoginForm) />
            </Styled(Content)>
          </View>,
        ],
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#002776",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Image
              resizeMode="contain"
              source={
                Object {
                  "process": [Function],
                }
              }
              style={
                Object {
                  "height": 150,
                  "width": 150,
                }
              }
            />,
            "style": Object {
              "flex": 1,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "resizeMode": "contain",
              "source": Object {
                "process": [Function],
              },
              "style": Object {
                "height": 150,
                "width": 150,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Content)
              contentContainerStyle={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#002776",
                  "flex": 3,
                  "justifyContent": "flex-start",
                }
              }
              virtual={undefined}
            >
              <Connect(LoginForm) />
            </Styled(Content)>,
            "style": Object {
              "flex": 2,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Connect(LoginForm) />,
              "contentContainerStyle": Object {
                "alignItems": "center",
                "backgroundColor": "#002776",
                "flex": 3,
                "justifyContent": "flex-start",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
