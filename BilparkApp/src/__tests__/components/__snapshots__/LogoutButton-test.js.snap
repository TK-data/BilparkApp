// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing LogoutButton Renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LogoutButton
    isLoggedIn={undefined}
    logoutUser={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Button)
        danger={true}
        iconRight={true}
        onPress={[Function]}
        virtual={undefined}
      >
        <Styled(Text)
          virtual={undefined}
        >
          Logg ut
        </Styled(Text)>
        <Styled(Icon)
          name="log-out"
          virtual={undefined}
        />
      </Styled(Button)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Text)
            virtual={undefined}
          >
            Logg ut
          </Styled(Text)>,
          <Styled(Icon)
            name="log-out"
            virtual={undefined}
          />,
        ],
        "danger": true,
        "iconRight": true,
        "onPress": [Function],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Logg ut",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "Logg ut",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "name": "log-out",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Button)
          danger={true}
          iconRight={true}
          onPress={[Function]}
          virtual={undefined}
        >
          <Styled(Text)
            virtual={undefined}
          >
            Logg ut
          </Styled(Text)>
          <Styled(Icon)
            name="log-out"
            virtual={undefined}
          />
        </Styled(Button)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Text)
              virtual={undefined}
            >
              Logg ut
            </Styled(Text)>,
            <Styled(Icon)
              name="log-out"
              virtual={undefined}
            />,
          ],
          "danger": true,
          "iconRight": true,
          "onPress": [Function],
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Logg ut",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Logg ut",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "log-out",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
