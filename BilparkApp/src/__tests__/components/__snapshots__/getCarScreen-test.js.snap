// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing GetCarScreen renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#F5FCFF",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
          "margin": 10,
          "textAlign": "center",
        }
      }
    >
      Finn din bil!
    </Text>
    <ReduxForm />
  </View>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 20,
              "margin": 10,
              "textAlign": "center",
            }
          }
        >
          Finn din bil!
        </Text>,
        <ReduxForm />,
      ],
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#F5FCFF",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Finn din bil!",
          "ellipsizeMode": "tail",
          "style": Object {
            "fontSize": 20,
            "margin": 10,
            "textAlign": "center",
          },
        },
        "ref": null,
        "rendered": "Finn din bil!",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 20,
                "margin": 10,
                "textAlign": "center",
              }
            }
          >
            Finn din bil!
          </Text>,
          <ReduxForm />,
        ],
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#F5FCFF",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Finn din bil!",
            "ellipsizeMode": "tail",
            "style": Object {
              "fontSize": 20,
              "margin": 10,
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Finn din bil!",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
